{"version":3,"sources":["components/Header/Header.module.scss","components/Background/drawFrame.ts","components/Background/SceneObject.ts","components/Background/index.ts","components/EnteringTextAnimation/types.ts","components/Background/Background.tsx","components/Background/update.ts","components/EnteringTextAnimation/enteringAnimationSteps.ts","components/EnteringTextAnimation/EnteringTextAnimation.tsx","components/EnteringTextAnimation/index.ts","components/Header/TEXTS.ts","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/EnteringTextAnimation/EnteringTextAnimation.module.scss","components/Background/Background.module.scss"],"names":["module","exports","canvas","a","ctx","getContext","state","clearRect","width","height","beginPath","fillStyle","arc","pointer","x","y","Math","PI","fill","SceneObject","vx","vy","ax","ay","lastTime","this","time","dt","Background","CursorState","stateRef","useRef","window","innerWidth","innerHeight","previousTime","mouseX","mouseY","canvasRef","useEffect","current","canceled","frameHandle","currentDrawFrame","getDrawFrame","then","drawFrame","requestAnimationFrame","draw","cancelAnimationFrame","currentTime","dy","dx","d","hypot","angle","atan2","cos","sin","update","useLayoutEffect","handleResize","sub","fromEvent","subscribe","unsubscribe","event","clientX","clientY","ref","className","s","enteringAnimationSteps","texts","length","i","currentWord","j","cursorState","Idle","text","slice","nextStepTimeout","Blinking","CURSOR_CLASS","blinking","idle","EnteringTextAnimation","useState","currentText","setCurrentText","setCursorState","stepIterator","timeoutId","step","entry","next","done","value","setTimeout","clearTimeout","classnames","cursor","TEXTS","Header","header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4acae304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3PefX\"};","import { IState } from \"./types\";\r\n\r\nexport async function getDrawFrame(\r\n  canvas: HTMLCanvasElement\r\n): Promise<(state: IState) => void> {\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  if (!ctx) return () => {};\r\n\r\n  return (state: IState) => {\r\n    ctx.clearRect(0, 0, state.width, state.height);\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"#f00\";\r\n    ctx.arc(state.pointer.x, state.pointer.y, 100, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  };\r\n}\r\n","export default class SceneObject {\r\n  public x: number;\r\n  public y: number;\r\n  public vx: number;\r\n  public vy: number;\r\n  public ax: number;\r\n  public ay: number;\r\n  private lastTime: number;\r\n  public constructor(\r\n    x: number,\r\n    y: number,\r\n    vx: number,\r\n    vy: number,\r\n    ax: number,\r\n    ay: number\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.vx = vx;\r\n    this.vy = vy;\r\n    this.ax = ax;\r\n    this.ay = ay;\r\n    this.lastTime = 0;\r\n  }\r\n  public update(time: number) {\r\n    if (!this.lastTime) {\r\n      this.lastTime = time;\r\n      return;\r\n    }\r\n    const dt = time - this.lastTime;\r\n    this.vx = this.ax * dt + this.vx;\r\n    this.vy = this.ay * dt + this.vy;\r\n    this.x = this.vx * dt + this.x;\r\n    this.y = this.vy * dt + this.y;\r\n    this.lastTime = time;\r\n  }\r\n}\r\n","import Background from \"./Background\";\r\n\r\nexport default Background;\r\n","export enum CursorState {\n  Blinking = 'Blinking',\n  Idle = 'Idle',\n}\n","import { useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { fromEvent } from \"rxjs\";\r\nimport s from \"./Background.module.scss\";\r\nimport { getDrawFrame } from \"./drawFrame\";\r\nimport { IState } from \"./types\";\r\nimport SceneObject from \"./SceneObject\";\r\nimport { update } from \"src/components/Background/update\";\r\n\r\nexport default function Background() {\r\n  const stateRef = useRef<IState>({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    time: 0,\r\n    previousTime: -1,\r\n    pointer: new SceneObject(\r\n      window.innerWidth / 2,\r\n      window.innerHeight / 2,\r\n      0,\r\n      0,\r\n      0,\r\n      0\r\n    ),\r\n    mouseX: window.innerWidth / 2,\r\n    mouseY: window.innerHeight / 2,\r\n  });\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n    if (!canvas) return;\r\n    let canceled = false;\r\n    let frameHandle: null | number = null;\r\n    let currentDrawFrame: (state: IState) => void = () => {};\r\n    getDrawFrame(canvas).then((drawFrame) => {\r\n      if (!canceled) {\r\n        currentDrawFrame = drawFrame;\r\n        frameHandle = requestAnimationFrame(draw);\r\n      }\r\n    });\r\n\r\n    function draw(currentTime: number) {\r\n      frameHandle = requestAnimationFrame(draw);\r\n\r\n      update(stateRef.current, currentTime);\r\n\r\n      currentDrawFrame(stateRef.current);\r\n    }\r\n\r\n    return () => {\r\n      canceled = true;\r\n      if (frameHandle) cancelAnimationFrame(frameHandle);\r\n    };\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const handleResize = () => {\r\n      stateRef.current.width = window.innerWidth;\r\n      stateRef.current.height = window.innerHeight;\r\n      if (canvasRef.current) {\r\n        canvasRef.current.width = stateRef.current.width;\r\n        canvasRef.current.height = stateRef.current.height;\r\n      }\r\n    };\r\n    const sub = fromEvent(window, \"resize\").subscribe(handleResize);\r\n    handleResize();\r\n    return () => {\r\n      sub.unsubscribe();\r\n    };\r\n  }, [stateRef]);\r\n\r\n  useEffect(() => {\r\n    const sub = fromEvent<MouseEvent>(window, \"mousemove\").subscribe(\r\n      (event) => {\r\n        stateRef.current.mouseX = event.clientX;\r\n        stateRef.current.mouseY = event.clientY;\r\n      }\r\n    );\r\n    return () => {\r\n      sub.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className={s.canvas}></canvas>;\r\n}\r\n","import { IState } from \"src/components/Background/types\";\r\n\r\nexport function update(state: IState, currentTime: number) {\r\n  state.previousTime = state.time;\r\n  state.time = currentTime;\r\n\r\n  const dy = state.mouseY - state.pointer.y;\r\n  const dx = state.mouseX - state.pointer.x;\r\n  const d = Math.hypot(dx, dy);\r\n  const angle = Math.atan2(dy, dx);\r\n  state.pointer.ax = d > 1 ? Math.cos(angle) / 5000 : 0;\r\n  state.pointer.ay = d > 1 ? Math.sin(angle) / 5000 : 0;\r\n  state.pointer.update(currentTime);\r\n}\r\n","import { CursorState } from \"./types\";\n\ninterface IEnteringAnimationStep {\n  cursorState: CursorState;\n  text: string;\n  nextStepTimeout: number;\n}\n\nexport function* enteringAnimationSteps(\n  texts: string[]\n): Generator<IEnteringAnimationStep, void, unknown> {\n  if (texts.length <= 0) return;\n  while (true) {\n    for (let i = 0; i < texts.length; i++) {\n      const currentWord = texts[i];\n      for (let j = 0; j < currentWord.length; j++) {\n        yield {\n          cursorState: CursorState.Idle,\n          text: currentWord.slice(0, j),\n          nextStepTimeout: 100,\n        };\n      }\n      yield {\n        cursorState: CursorState.Blinking,\n        text: currentWord,\n        nextStepTimeout: 4000,\n      };\n      for (let j = currentWord.length - 1; j >= 0; j--) {\n        yield {\n          cursorState: CursorState.Idle,\n          text: currentWord.slice(0, j),\n          nextStepTimeout: 50,\n        };\n      }\n    }\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./EnteringTextAnimation.module.scss\";\nimport { CursorState } from \"./types\";\nimport { enteringAnimationSteps } from \"./enteringAnimationSteps\";\n\nconst CURSOR_CLASS: Record<CursorState, string> = {\n  [CursorState.Blinking]: s.blinking,\n  [CursorState.Idle]: s.idle,\n};\n\nexport default function EnteringTextAnimation({\n  texts,\n}: {\n  texts: string[];\n}): JSX.Element | null {\n  const [currentText, setCurrentText] = useState(texts[0] || \"\");\n  const [cursorState, setCursorState] = useState(CursorState.Blinking);\n\n  useEffect(() => {\n    const stepIterator = enteringAnimationSteps(texts);\n    let timeoutId: number | null = null;\n\n    function step(): void {\n      const entry = stepIterator.next();\n      if (entry.done) return;\n      setCurrentText(entry.value.text);\n      setCursorState(entry.value.cursorState);\n      timeoutId = window.setTimeout(step, entry.value.nextStepTimeout);\n    }\n\n    step();\n\n    return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [texts]);\n\n  if (texts.length <= 0) return null;\n\n  return (\n    <span>\n      {currentText}\n      <span className={classnames(s.cursor, CURSOR_CLASS[cursorState])}>\n        &nbsp;\n      </span>\n    </span>\n  );\n}\n","import EnteringTextAnimation from './EnteringTextAnimation'\n\nexport default EnteringTextAnimation\n","export const TEXTS: string[] = [\r\n  \" plays the violin\",\r\n  \" likes programming\",\r\n  \" likes algorithms\",\r\n  \" likes create custom charts\",\r\n  \" ready to help\",\r\n  \" is a frontend developer by profession\",\r\n  \" has a diploma from NTUU KPI\",\r\n  \" lives in Kyiv\",\r\n  \" love his wife\",\r\n];\r\n","import EnteringTextAnimation from \"src/components/EnteringTextAnimation\";\r\nimport s from \"./Header.module.scss\";\r\nimport { TEXTS } from \"./TEXTS\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className={s.header}>\r\n      <div>\r\n        Andrew Beletskiy <EnteringTextAnimation texts={TEXTS} />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Background from \"src/components/Background\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Background />\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursor\":\"EnteringTextAnimation_cursor__18K7-\",\"blinking\":\"EnteringTextAnimation_blinking__2YrR2\",\"blink\":\"EnteringTextAnimation_blink__BUM9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Background_canvas__1yauc\"};"],"sourceRoot":""}